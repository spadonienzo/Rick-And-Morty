{"ast":null,"code":"const validation = userData => {\n  let errors = {};\n  if (!/\\S+@\\S+\\.\\S+/.test(userData.email)) {\n    errors.email = \"Enter a valid email\";\n  }\n  if (!userData.email) {\n    errors.email = \"Email can not be null \";\n  }\n  if (userData.email.length > 35) {\n    errors.email = \"Email length limit is 35\";\n  }\n  if (!userData.password.match(/\\d/)) {\n    errors.password = \"Password must have a number\";\n  }\n  if (userData.password.length < 6 || userData.password.length > 10) {\n    errors.password = \"Password must be between 6 and 10 digits\";\n  }\n  return errors;\n};\nexport default validation;","map":{"version":3,"names":["validation","userData","errors","test","email","length","password","match"],"sources":["C:/Users/enzos/OneDrive/Desktop/Henrys/PI/rick-and-morty/Client/src/components/validations.js"],"sourcesContent":["const validation = (userData) => {\r\n  let errors = {};\r\n\r\n  if (!/\\S+@\\S+\\.\\S+/.test(userData.email)) {\r\n    errors.email = \"Enter a valid email\";\r\n  }\r\n  if (!userData.email) {\r\n    errors.email = \"Email can not be null \";\r\n  }\r\n  if (userData.email.length > 35) {\r\n    errors.email = \"Email length limit is 35\";\r\n  }\r\n\r\n  if (!userData.password.match(/\\d/)) {\r\n    errors.password = \"Password must have a number\";\r\n  }\r\n  if (userData.password.length < 6 || userData.password.length > 10) {\r\n    errors.password = \"Password must be between 6 and 10 digits\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default validation;\r\n"],"mappings":"AAAA,MAAMA,UAAU,GAAIC,QAAQ,IAAK;EAC/B,IAAIC,MAAM,GAAG,CAAC,CAAC;EAEf,IAAI,CAAC,cAAc,CAACC,IAAI,CAACF,QAAQ,CAACG,KAAK,CAAC,EAAE;IACxCF,MAAM,CAACE,KAAK,GAAG,qBAAqB;EACtC;EACA,IAAI,CAACH,QAAQ,CAACG,KAAK,EAAE;IACnBF,MAAM,CAACE,KAAK,GAAG,wBAAwB;EACzC;EACA,IAAIH,QAAQ,CAACG,KAAK,CAACC,MAAM,GAAG,EAAE,EAAE;IAC9BH,MAAM,CAACE,KAAK,GAAG,0BAA0B;EAC3C;EAEA,IAAI,CAACH,QAAQ,CAACK,QAAQ,CAACC,KAAK,CAAC,IAAI,CAAC,EAAE;IAClCL,MAAM,CAACI,QAAQ,GAAG,6BAA6B;EACjD;EACA,IAAIL,QAAQ,CAACK,QAAQ,CAACD,MAAM,GAAG,CAAC,IAAIJ,QAAQ,CAACK,QAAQ,CAACD,MAAM,GAAG,EAAE,EAAE;IACjEH,MAAM,CAACI,QAAQ,GAAG,0CAA0C;EAC9D;EAEA,OAAOJ,MAAM;AACf,CAAC;AAED,eAAeF,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}